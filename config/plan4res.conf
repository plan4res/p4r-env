# -*- mode: sh; sh-shell: bash; -*-
## This is the default Plan4Res configuration file
#
# It is a (Bourne) shell script fragment that can be sourced
#
# All environment variables set here have a P4R_ prefix
#
## All variables do need to be exported, so we do
set -a

###########################################################################
##### User configurable section
###########################################################################
####
########################################
#### Section 1: Executor selection
####
# Default executor is 'singularity'. Alternatives are currently untested
P4R_EXECUTOR=singularity
#P4R_EXECUTOR=shell
#P4R_EXECUTOR=define_your_own

### Section 1.1: Executor-specific options
###
## Singularity configuration
# pre-built image selection:
P4R_SINGULARITY_IMAGE_RELEASE="master"
#P4R_SINGULARITY_IMAGE_RELEASE="devel"
# avoid updating the image if possible
#P4R_SINGULARITY_IMAGE_PRESERVE=1
P4R_SINGULARITY_IMAGE_PRESERVE=${P4R_SINGULARITY_IMAGE_PRESERVE:-0}
# If you want to use your locally-built image
#P4R_USE_LOCAL_IMAGE=1
P4R_USE_LOCAL_IMAGE=${P4R_USE_LOCAL_IMAGE:-0}
# Cache the sandbox image for Linux only rootless Singularity installation, default is 0
#P4R_CACHE_SANDBOX=1
# MPI implementation: MPICH (default) or OpenMPI
P4R_MPI_IMP=${P4R_MPI_IMP:-"MPICH"}
# Plan4res stored container name
P4R_CONTAINER_NAME="plan4res_${P4R_MPI_IMP}"

# options in expert section below


##
## Shell configuration
#(none currently)

########################################
#### Section 2: Marketlab configuration
####
# Marketlab configuration: access credential file (relative to this file)
# YOU NEED TO EDIT THE CONTENT OF THIS FILE: INSERT YOUR CREDENTIALS IN IT
P4R_MARKETLAB_SECRETS=marketlab.conf

########################################
#### Section 3: Swift-T configuration
####
# config file -- relative to this file
P4R_SWIFTT_CONF=swift-t.conf

###########################################################################
##### End of user configuration section
###########################################################################

# OpenMPI is only supported for Linux
p4r_uname="$(uname -s)"
case "${p4r_uname}" in
    Linux*)
    ;;
    *)
      # Windows or MacOS
      P4R_MPI_IMP="MPICH"
      P4R_CONTAINER_NAME="plan4res_${P4R_MPI_IMP}"
    ;;
esac

# The $PLAN4RESROOT variable is set very early in all scripts that source this
# file, and globally in the singularity image

if [ ${P4R_USE_LOCAL_IMAGE} -eq 0 ]; then
   ## Singularity expert settings:
   # URL of singularity CI build
   # The default is from the public CI build of the p4r-exec-singularity image:
   P4R_SINGULARITY_IMAGE_BASE_DEF_URL="https://gitlab.com/api/v4/projects/cerl%2Fplan4res%2Fp4r-exec-singularity/jobs/artifacts/${P4R_SINGULARITY_IMAGE_RELEASE:-master}/raw/singularity/plan4res_base.def?job=build_base"
   P4R_SINGULARITY_IMAGE_DEF_URL="https://gitlab.com/api/v4/projects/cerl%2Fplan4res%2Fp4r-exec-singularity/jobs/artifacts/${P4R_SINGULARITY_IMAGE_RELEASE:-master}/raw/singularity/plan4res_mpi.def?job=build_${P4R_MPI_IMP}"
   P4R_SINGULARITY_IMAGE_IMG_URL="https://gitlab.com/api/v4/projects/cerl%2Fplan4res%2Fp4r-exec-singularity/jobs/artifacts/${P4R_SINGULARITY_IMAGE_RELEASE:-master}/raw/singularity/plan4res_${P4R_MPI_IMP}.sif?job=build_${P4R_MPI_IMP}"
else
    #
    # If you build your own image (using bin/rebuild-singularity-image for
    # instance) you can use it by setting
    # Only MPICH available for Vagrant VM
    P4R_SINGULARITY_IMAGE_BASE_DEF_URL="file:///${PLAN4RESROOT:?PLAN4RESROOT variable not set}/executors/singularity/plan4res_base.def"
    P4R_SINGULARITY_IMAGE_DEF_URL="file:///${PLAN4RESROOT:?PLAN4RESROOT variable not set}/executors/singularity/plan4res_mpi.def"
    P4R_SINGULARITY_IMAGE_IMG_URL="file:///${PLAN4RESROOT:?PLAN4RESROOT variable not set}/executors/singularity/${P4R_CONTAINER_NAME}.sif"
fi

# Cache directory name
P4R_CACHEDIR=${PLAN4RESROOT:?PLAN4RESROOT variable not set}/.cache_p4r

# Tracing?
P4R_TRACE=${P4R_TRACE:-0}

# Add-ons dirs
ADDONS_DIR=${PLAN4RESROOT:?PLAN4RESROOT variable not set}/scripts/add-ons
ADDONS_INSTALLDIR=${ADDONS_DIR}/install
if [[ "$USER" = "vagrant" ]]; then
    # Build under vagrant directory
    ADDONS_CACHEDIR=~/.addons_build
    # Install in a temporary directory under vagrant and then rsync to the host ${ADDONS_INSTALLDIR}
    ADDONS_INSTALLDIR_TMP=~/.addons_install
else
    ADDONS_CACHEDIR=${ADDONS_DIR}/.build
    # For linux host, the installation goes directly on the host
    ADDONS_INSTALLDIR_TMP=${ADDONS_INSTALLDIR}
fi

# Temporary directory for building image
BUILDDIR=${PWD}/build_image

###########################################################################
# stop exporting all variables
set +a
## End of sample Plan4Res configuration file
